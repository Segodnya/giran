---
import Layout from '../layouts/Layout.astro';
import {
  fetchArticles,
  formatArticleTitle,
  type Article,
} from '../services/api';

let articles: Article[] = [];
let error = '';

try {
  articles = await fetchArticles();
} catch (e) {
  error = e instanceof Error ? e.message : 'Failed to load articles';
  console.error('Error fetching articles:', e);
}

// Handle error query parameter (from redirects)
const errorParam = Astro.url.searchParams.get('error');
if (errorParam) {
  error = errorParam;
}
---

<Layout
  title="Article Reader"
  description="Browse and read articles from our curated collection"
>
  <div class="hero bg-base-200 rounded-lg mb-8">
    <div class="hero-content text-center">
      <div class="max-w-md">
        <h1 class="text-5xl font-bold mb-4">üìö Article Reader</h1>
        <p class="mb-6">
          Discover and read amazing articles from our curated collection. Click
          on any article to read it instantly without page refreshes.
        </p>
        <div class="badge badge-primary badge-lg">Powered by HTMX ‚ö°</div>
      </div>
    </div>
  </div>

  <!-- Error display -->
  {
    error && (
      <div class="alert alert-error mb-6">
        <div>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="stroke-current shrink-0 h-6 w-6"
            fill="none"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z"
            />
          </svg>
          <span>{error}</span>
        </div>
      </div>
    )
  }

  <!-- Article List Container -->
  <div class="grid gap-6">
    <div class="flex justify-between items-center">
      <h2 class="text-3xl font-bold">Latest Articles</h2>
      <div class="badge badge-success">{articles.length} Articles</div>
    </div>

    <!-- Articles Grid -->
    <div
      id="articles-container"
      class="grid gap-4 md:grid-cols-2 lg:grid-cols-3"
    >
      {
        articles.length === 0 && !error ? (
          <div class="col-span-full">
            <div class="card bg-base-100 shadow-xl">
              <div class="card-body text-center">
                <h3 class="card-title justify-center">üìù No Articles Found</h3>
                <p>No articles are available at the moment.</p>
                <div class="card-actions justify-center">
                  <button
                    class="btn btn-primary"
                    onclick="window.location.reload()"
                  >
                    üîÑ Refresh
                  </button>
                </div>
              </div>
            </div>
          </div>
        ) : (
          articles.map((article) => (
            <div class="card bg-base-100 shadow-xl hover:shadow-2xl transition-shadow duration-300">
              <div class="card-body">
                <h3 class="card-title text-lg">
                  {formatArticleTitle(article.name)}
                </h3>
                <p class="text-sm text-base-content/70 mb-4">
                  Click to read this article instantly
                </p>
                <div class="flex gap-2 mb-4">
                  <span class="badge badge-outline text-xs">
                    {article.type}
                  </span>
                  {article.size && (
                    <span class="badge badge-outline text-xs">
                      {Math.round(article.size / 1024)} KB
                    </span>
                  )}
                </div>
                <div class="card-actions justify-end">
                  <button
                    class="btn btn-primary btn-sm"
                    hx-get={`/articles/${article.id}`}
                    hx-target="#article-content"
                    hx-swap="innerHTML"
                    onclick="document.getElementById('article-content').classList.remove('hidden'); document.getElementById('article-content').scrollIntoView({ behavior: 'smooth' });"
                  >
                    üìñ Read
                  </button>
                  <a
                    href={`/articles/${article.id}`}
                    class="btn btn-ghost btn-sm"
                    target="_blank"
                  >
                    üîó Open
                  </a>
                </div>
              </div>
            </div>
          ))
        )
      }
    </div>

    <!-- Article Content Display Area -->
    <div id="article-content" class="hidden">
      <div class="card bg-base-100 shadow-xl">
        <div class="card-body">
          <!-- Content will be loaded here by HTMX -->
          <div class="flex justify-center items-center h-32">
            <span class="loading loading-spinner loading-lg"></span>
          </div>
        </div>
      </div>
    </div>
  </div>
</Layout>

<style>
  /* Custom animations for smooth transitions */
  #article-content {
    transition: all 0.3s ease-in-out;
  }

  .card:hover {
    transform: translateY(-2px);
  }

  /* HTMX loading states */
  .htmx-request #article-content {
    opacity: 0.8;
  }

  /* Smooth scroll behavior */
  html {
    scroll-behavior: smooth;
  }
</style>

<script>
  // Add smooth scrolling and better UX
  document.addEventListener('DOMContentLoaded', function () {
    // Auto-hide article content when clicking outside
    document.addEventListener('click', function (e) {
      if (!e.target) return;

      const target = e.target as HTMLElement;
      const articleContent = document.getElementById('article-content');

      if (!articleContent) return;

      const isClickInsideArticle = articleContent.contains(target);
      const isReadButton = target.closest('[hx-get]');

      if (
        !isClickInsideArticle &&
        !isReadButton &&
        !articleContent.classList.contains('hidden')
      ) {
        // Only hide if clicking on the main content area, not buttons
        if (target.closest('#articles-container') && !target.closest('.card')) {
          articleContent.classList.add('hidden');
        }
      }
    });

    // Handle HTMX events for better UX
    document.addEventListener('htmx:beforeRequest', function (e) {
      const articleContent = document.getElementById('article-content');
      if (!articleContent) return;

      articleContent.innerHTML = `
        <div class="card bg-base-100 shadow-xl">
          <div class="card-body">
            <div class="flex justify-center items-center h-32">
              <span class="loading loading-spinner loading-lg"></span>
              <span class="ml-4">Loading article...</span>
            </div>
          </div>
        </div>
      `;
    });
  });
</script>
